{
    "project": {
        "name": "fabmo.js",
        "description": "Javascript library for writing FabMo apps.",
        "version": "v1.0.2",
        "url": "https://github.com/FabMo/fabmo.js#readme"
    },
    "files": {
        ".grunt/grunt-gh-pages/gh-pages/src/api/assets/vendor/bootstrap/js/bootstrap.min.js": {
            "name": ".grunt/grunt-gh-pages/gh-pages/src/api/assets/vendor/bootstrap/js/bootstrap.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yuidoc-fabmo-theme/assets/vendor/bootstrap/js/bootstrap.min.js": {
            "name": "yuidoc-fabmo-theme/assets/vendor/bootstrap/js/bootstrap.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yuidoc-fabmo-theme/helpers/helpers.js": {
            "name": "yuidoc-fabmo-theme/helpers/helpers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "fabmo.js": {
            "name": "fabmo.js",
            "modules": {
                "fabmo.js": 1
            },
            "classes": {
                "FabMoDashboard": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "fabmo.js": {
            "name": "fabmo.js",
            "submodules": {},
            "elements": {},
            "classes": {
                "FabMoDashboard": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "fabmo.js",
            "line": 18
        }
    },
    "classes": {
        "FabMoDashboard": {
            "name": "FabMoDashboard",
            "shortname": "FabMoDashboard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "fabmo.js",
            "namespace": "",
            "file": "fabmo.js",
            "line": 18,
            "description": "The top-level object representing the dashboard."
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": ".grunt/grunt-gh-pages/gh-pages/src/api/assets/vendor/bootstrap/js/bootstrap.min.js",
            "line": 1,
            "description": "Bootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "class": "FabMoDashboard"
        },
        {
            "file": "yuidoc-fabmo-theme/assets/vendor/bootstrap/js/bootstrap.min.js",
            "line": 1,
            "description": "Bootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "class": "FabMoDashboard"
        },
        {
            "file": "yuidoc-fabmo-theme/helpers/helpers.js",
            "line": 16,
            "description": "Hack for:\nhttps://github.com/yui/yuidoc/issues/198\n\nUsage:\n  {{#crossLinkWrapper type}}{{#crossLink type}}{{/crossLink}}{{/crossLinkWrapper}}",
            "class": "FabMoDashboard"
        },
        {
            "file": "fabmo.js",
            "line": 58,
            "itemtype": "method",
            "name": "isPresent",
            "return": {
                "description": "True if running in the actual FabMo dashboard.  False otherwise.",
                "type": "Boolean"
            },
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 237,
            "description": "Bind a callback to the specified event.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "name",
                    "description": "Event name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Event handler",
                    "type": "Function"
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 280,
            "description": "Indicate that the app is loaded and ready to go!",
            "itemtype": "method",
            "name": "ready",
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 289,
            "description": "Set the message to display while an app is loading.  You can call this any time before\ncalling the `ready()` function, to indicate loading or setup progress.",
            "itemtype": "method",
            "name": "setBusy",
            "params": [
                {
                    "name": "The",
                    "description": "message to display.",
                    "type": "String"
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 299,
            "description": "If this app was invoked from another app, get the arguments (if any) that were passed on invocation.",
            "itemtype": "method",
            "name": "getAppArgs",
            "callback": "{Object} The arguments passed to this app, or undefined.",
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 309,
            "description": "Get the information for this app.",
            "itemtype": "method",
            "name": "getAppInfo",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "info",
                            "description": "App information",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The name of the App",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 322,
            "description": "Launch the specified app by app ID, with optional arguments.",
            "itemtype": "method",
            "name": "launchApp",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the app to launch.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Arguments object to pass to the app.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error",
                            "type": "Error"
                        },
                        {
                            "name": "app",
                            "description": "App info for the launched app if launch was successful",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 336,
            "description": "Show the DRO (Digital ReadOut) in the dashboard if it is not already shown.",
            "itemtype": "method",
            "name": "showDRO",
            "params": [
                {
                    "name": "callback",
                    "description": "Called once the DRO has been displayed.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 347,
            "description": "Hide the DRO (Digital ReadOut) in the dashboard if it is not already hidden.",
            "itemtype": "method",
            "name": "hideDRO",
            "params": [
                {
                    "name": "callback",
                    "description": "Called once the DRO has been hidden.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 358,
            "description": "Show the Dashboard Modal.",
            "itemtype": "method",
            "name": "showModal",
            "params": [
                {
                    "name": "options",
                    "description": "Options for modal content",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "Called once the modal is shown.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 370,
            "description": "Hide the Dashboard Modal.",
            "itemtype": "method",
            "name": "hideModal",
            "params": [
                {
                    "name": "callback",
                    "description": "Called once the DRO has been hidden.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 383,
            "description": "Show a notification on the dashboard.  Notifications typically show up as toaster message somewhere on the dashboard, \nbut the dashboard reserves the right to format or even suppress these messages as suits its needs.",
            "itemtype": "method",
            "name": "notify",
            "params": [
                {
                    "name": "type",
                    "description": "Type of message, which can be one of `info`,`warn`,`error`, or `success`",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The text to be displayed in the notification.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called once the message has been displayed",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 452,
            "description": "Submit one or more jobs to the dashboard.",
            "params": [
                {
                    "name": "jobs",
                    "description": "A single job object, an array containing multiple job objects, or a jQuery object that points to a file type form input, or a form containing a file type input.",
                    "type": "Array|Object|jQuery"
                },
                {
                    "name": "options",
                    "description": "Options for job submission",
                    "type": "Object",
                    "optional": true
                }
            ],
            "todo": [
                "Finish documenting this function"
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 493,
            "description": "Resubmit a job by its ID.  Resubmitted jobs come in at the back of the job queue.",
            "itemtype": "method",
            "name": "resubmitJob",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the job to resubmit",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 505,
            "description": "Cancel a job that is pending.",
            "itemtype": "method",
            "name": "cancelJob",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the job to cancel",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 517,
            "description": "Get information about a job.  This works for jobs that are pending, currently running, or in the history.",
            "itemtype": "method",
            "name": "getJobInfo",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the job to cancel",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "job",
                            "description": "Information about the requested job.",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Job name",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "description": "Job description",
                                    "type": "String"
                                },
                                {
                                    "name": "created_at",
                                    "description": "Job creation time (UTC datetime)",
                                    "type": "Number"
                                },
                                {
                                    "name": "started_at",
                                    "description": "Job start time (UTC datetime)",
                                    "type": "Number"
                                },
                                {
                                    "name": "finished_at",
                                    "description": "Job completion time (UTC datetime)",
                                    "type": "Number"
                                },
                                {
                                    "name": "state",
                                    "description": "Current state of the job.  One of `pending`,`running`,`finished`,`cancelled` or `failed`",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 536,
            "description": "Get a list of jobs that are currently pending and running.",
            "itemtype": "method",
            "name": "getJobsInQueue",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "jobs",
                            "description": "Object containing both the pending and running jobs",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "pending",
                                    "description": "List of pending jobs.  May be empty.",
                                    "type": "Array"
                                },
                                {
                                    "name": "running",
                                    "description": "List of running jobs.  May be empty.",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 550,
            "description": "Remove all pending jobs from the queue.",
            "itemtype": "method",
            "name": "clearJobQueue",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 561,
            "description": "Get a list of jobs in the history.",
            "itemtype": "method",
            "name": "getJobHistory",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "start",
                            "description": "The location in the results to start",
                            "type": "Number"
                        },
                        {
                            "name": "count",
                            "description": "The number of jobs to return",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "jobs",
                            "description": "Array of jobs in the history",
                            "type": "Object[]"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 576,
            "description": "Run the next job in the job queue.",
            "itemtype": "method",
            "name": "runNext",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 588,
            "description": "Pause the execution of the current job or operation.  Operation can be resumed.",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 600,
            "description": "Stop execution of the current job or operation.  Operation cannot be resumed.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 612,
            "description": "Resume the current operation of the system is paused.",
            "itemtype": "method",
            "name": "resume",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 624,
            "description": "Perform a fixed manual move in a single axis.  (Sometimes called a nudge)",
            "itemtype": "method",
            "name": "manualMoveFixed",
            "params": [
                {
                    "name": "axis",
                    "description": "One of `x`,`y`,`z`,`a`,`b`,`c`",
                    "type": "String"
                },
                {
                    "name": "speed",
                    "description": "Speed in current tool units",
                    "type": "Number"
                },
                {
                    "name": "distance",
                    "description": "The distance to move in current units",
                    "type": "Distance"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 638,
            "description": "Start performing a manual move of the specified axis at the specified speed.",
            "itemtype": "method",
            "name": "manualStart",
            "params": [
                {
                    "name": "axis",
                    "description": "One of `x`,`y`,`z`,`a`,`b`,`c`",
                    "type": "Number"
                },
                {
                    "name": "speed",
                    "description": "Speed in current tool units.  Negative to move in the negative direction.",
                    "type": "Number"
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 649,
            "description": "Send a \"heartbeat\" to the system, authorizing continued manual movement.  Manual moves must be continually\nrefreshed with this heartbeat function, or the tool will stop moving.",
            "itemtype": "method",
            "name": "manualHeartbeat",
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 659,
            "description": "Stop the tool immediately.",
            "itemtype": "method",
            "name": "manualStop",
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 668,
            "description": "Get the list of all the installed apps.",
            "itemtype": "method",
            "name": "getApps",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "apps",
                            "description": "List of app objects representing all installed apps.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 772,
            "description": "Get a list of all the macros installed on the tool.",
            "itemtype": "method",
            "name": "getMacros",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "macros",
                            "description": "List of macro objects currently installed.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 784,
            "description": "Run the specified macro immediately.  Macro does not appear in the job history.",
            "itemtype": "method",
            "name": "runMacro",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the macro to run.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 800,
            "description": "Request a status report from the system.  The status object is returned in the callback to this function, as well as posted\nwith the status event.  To recieve updates to system status as it changes, you should bind a handler to the status event,\nand _not_ poll using `requestStatus`.",
            "itemtype": "method",
            "name": "requestStatus",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "status",
                            "description": "The status report object",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "state",
                                    "description": "The system state, one of `idle`,`running`,`paused`,`stopped`,`manual` or `dead`",
                                    "type": "String"
                                },
                                {
                                    "name": "posx",
                                    "description": "The current x-axis position",
                                    "type": "Number"
                                },
                                {
                                    "name": "posy",
                                    "description": "The current y-axis position",
                                    "type": "Number"
                                },
                                {
                                    "name": "posz",
                                    "description": "The current z-axis position",
                                    "type": "Number"
                                },
                                {
                                    "name": "posa",
                                    "description": "The current a-axis position",
                                    "type": "Number"
                                },
                                {
                                    "name": "posb",
                                    "description": "The current b-axis position",
                                    "type": "Number"
                                },
                                {
                                    "name": "posc",
                                    "description": "The current c-axis position",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 1 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 2 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 3 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 4 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 5 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 6 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 7 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "in1",
                                    "description": "The current state of input 8 (`0` or `1`)",
                                    "type": "Number"
                                },
                                {
                                    "name": "unit",
                                    "description": "The current tool units (either `in` or `mm`)",
                                    "type": "String"
                                },
                                {
                                    "name": "line",
                                    "description": "The line number in the currently running file (if a file is running)",
                                    "type": "Number"
                                },
                                {
                                    "name": "nb_lines",
                                    "description": "The total number of lines in the currently running file (if a file is running)",
                                    "type": "Number"
                                },
                                {
                                    "name": "auth",
                                    "description": "True if the tool is currently authorized for movement",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "current_file",
                                    "description": "Object describing the currently running file (or null if not running a file)",
                                    "type": "Object"
                                },
                                {
                                    "name": "job",
                                    "description": "Object describing the currently running job (or null if not running a job)",
                                    "type": "Object"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 838,
            "description": "Get the configuration object for the currently running app.  The configuration object is a JSON object \nof no specific description that is saved with each app.  It can be used to store app-specific configuration data.",
            "itemtype": "method",
            "name": "getAppConfig",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "config",
                            "description": "Configuration object or {} if no configuration has been saved in the app.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 851,
            "description": "Set the app configuration to the provided option.",
            "itemtype": "method",
            "name": "setAppConfig",
            "params": [
                {
                    "name": "config",
                    "description": "The configuration object to set.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "config",
                            "description": "Configuration object or {} if no configuration has been saved in the app.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 864,
            "description": "Get the current FabMo version",
            "itemtype": "method",
            "name": "getVersion",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Fuction",
                    "props": [
                        {
                            "name": "err",
                            "description": "Error object if there was an error.",
                            "type": "Error"
                        },
                        {
                            "name": "version",
                            "description": "Object describing the fabmo software version.",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "hash",
                                    "description": "The git hash of the currently running FabMo software",
                                    "type": "String"
                                },
                                {
                                    "name": "number",
                                    "description": "The user-friendly release version number (or empty string if not a released version",
                                    "type": "String"
                                },
                                {
                                    "name": "debug",
                                    "description": "True if FabMo is running in \"debug mode\"",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "type",
                                    "description": "The type of FabMo software build.  `dev` for development or `release` for released build.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        },
        {
            "file": "fabmo.js",
            "line": 880,
            "description": "Control top level navigation for the dashboard.  Usually this is used to open another browser/tab window with a link from within an app,\nor more rarely, to navigate away from the dashboard.",
            "itemtype": "method",
            "name": "navigate",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to open",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options for top-level navigation.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "target",
                            "description": "The link target (same as the target argument of `window.open`)",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "FabMoDashboard",
            "module": "fabmo.js"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: callback",
            "line": " fabmo.js:299"
        },
        {
            "message": "Missing item type\nBootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "line": " .grunt/grunt-gh-pages/gh-pages/src/api/assets/vendor/bootstrap/js/bootstrap.min.js:1"
        },
        {
            "message": "Missing item type\nBootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "line": " yuidoc-fabmo-theme/assets/vendor/bootstrap/js/bootstrap.min.js:1"
        },
        {
            "message": "Missing item type\nHack for:\nhttps://github.com/yui/yuidoc/issues/198\n\nUsage:\n  {{#crossLinkWrapper type}}{{#crossLink type}}{{/crossLink}}{{/crossLinkWrapper}}",
            "line": " yuidoc-fabmo-theme/helpers/helpers.js:16"
        },
        {
            "message": "Missing item type\nSubmit one or more jobs to the dashboard.",
            "line": " fabmo.js:452"
        }
    ]
}